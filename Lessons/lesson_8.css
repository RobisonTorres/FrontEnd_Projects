/* Clicking on the navigation links should jump the viewport to the relevant section.
However, this jumping can be disorienting for some users. Select all elements, 
and set the scroll-behavior to smooth.*/

/* The @media rule is used in media queries to apply different styles for
different media types/devices.*/
@media (prefers-reduced-motion: no-preference) {
* {scroll-behavior: smooth;}}

body {background: #f5f6f7;
  color: #1b1b32;
  font-family: Helvetica;
  margin: 0;
}
  
header {width: 100%;
  height: 50px;
  background-color: #1b1b32;
  display: flex;

/* Tidy up the header, by using Flexbox to put space between the children, 
and vertically center them. Then, fix the header to the top of the viewport.*/
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
}
  
#logo {width: max(100px, 18vw);
  background-color: #0a0a23;
  aspect-ratio: 35 / 4;
  padding: 0.4rem;
}
  

/* When the screen width is small, the h1 does not wrap its text content how it should. 
Align the text for the h1 element in the center.*/  
h1 {color: #f1be32;
  font-size: min(5vw, 1.2em);
  text-align: center;
}

/* Then, give the main padding such that the Student Info section header can be fully seen.*/  
main {padding-top: 25px;}  /*At least 25px*/
  
nav {width: 50%;
  max-width: 300px;
  height: 50px;
}
  
nav > ul {display: flex;
  justify-content: space-evenly;
      
/* On small screens, the unordered list in the navigation bar overflows the 
right side of the screen. Fix this by using Flexbox to wrap the ul content. */      
  flex-wrap: wrap;

/* Then, set the following CSS properties to correctly align the text:*/
  align-items: center;
  padding-inline-start: 0;
  margin-block: 0;
  height: 100%;
}
  
h1,
h2 {font-family: Verdana, Tahoma;}
  
h2 {border-bottom: 4px solid #dfdfe2;
  margin-top: 0;
  padding-top: 60px;
}
  
.sr-only {position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* To prevent unnecessary repetition, target the before pseudo-element of the
p element, and give it a content property of "Question #".*/
p::before {content: "Question #";}

nav > ul > li  {color: #dfdfe2;
  margin: 0 0.2rem;
  padding: 0.2rem;
  display: block;}

/* On the topic of visual accessibility, contrast between elements is a key factor. 
For example, the contrast between the text and the background of a heading should 
be at least 4.5:1. Change the font color of all the anchor elements within the list 
elements to something with a contrast ratio of at least 7:1.*/  
li > a {color: inherit;

/* To make the navigation buttons look more like typical buttons, remove the underline 
from the anchor tags.*/  
  text-decoration: none;}

/* Then, create a new selector targeting the navigation list elements so that when the 
cursor hovers over them, the background color and text color are switched, and the cursor
becomes a pointer.*/
nav > ul > li:hover {background-color: #dfdfe2;
  color: #1b1b32;
  cursor: pointer;}

section {width: 80%;
  margin: 0 auto 10px auto;
  max-width: 600px;}

.info {padding: 1px 0 0 1px;} /*top right bottom left*/

.formrow {margin-top: 30px;
  padding: 0px 15px;}  /*top & bottom, right & left*/

input {font-size: 16px;}


/* To align the input boxes with each other, set the display property to 
inline-block for all input and label elements within .info elements.
Also, align the text to the right.*/
.info label, .info input {display: inline-block;
  text-align: right;}

/* To make the first section look more inline, target only the input elements within 
.info elements, and set their width to 50%, and left-align their text.*/
.info > input {width: 50%;
  text-align: left;}

/* Target all label elements within .info elements, and set their width to 10%,
and make it so they do not take up less than 55px.*/  
.info > label {width: 10%;
  min-width: 55px;}

.question-block {text-align: left;
  display: block;
  width: 100%;
  margin-top: 20px;
  padding-top: 5px;}

/* Make the paragraph elements appear as a higher priority, with the following CSS properties:*/
p {margin-top: 5px;
  padding-left: 15px;
  font-size: 20px;}

/* It is useful to see the default border around the fieldset elements, during development.
However, it might not be the style you want. Remove the border and bottom padding 
on the .question elements.*/
.question {border: none;
  padding: 0 0;}

/* Remove the default styling for the list items of .answers-list, and remove the
unordered list padding.*/
.answers-list {list-style: none;
  padding: 0 0;}

button {display: block;
  margin: 40px auto;
  width: 40%;
  padding: 15px;
  font-size: 23px;
  background: #d0d0d5;
  border: 3px solid #3b3b4f;} 


/* Set the footer background color to #2a2a40, and use Flexbox to horizontally center the text.*/  
footer {background-color: #2a2a40;
  display: flex;
  justify-content: center;}

/* Now, we cannot read the text. Target the footer and the anchor element within to set 
the font color to a color of adequate contrast ratio.*/ 
footer, footer a {color: #dfdfe2;}

address {text-align: center;
  padding: 0.3em;}
